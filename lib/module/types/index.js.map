{"version":3,"names":[],"sources":["index.ts"],"sourcesContent":["import { StyleProp, TextStyle, ViewStyle } from 'react-native';\n\nexport interface ICountry {\n  name: string;\n  alpha2Code: string;\n  callingCode: string;\n  flag: any;\n}\n\nexport interface ICallingCodePickerProps {\n  /**\n   * the ISO 3166-1 alpha-2 code (FR, US, CA) of the country that you would like to show initially.\n   */\n  initialCountryCode?: string;\n  /**\n   * Callback for when a country is selected.\n   * @param `callingCode`: the calling code of the selected country\n   */\n  onValueChange: (callingCode?: string) => void;\n  /**\n   * Style to apply to the toggler container.\n   */\n  togglerContainerStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style to apply to the picker toggler label.\n   */\n  togglerLabelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style to apply to the list container.\n   */\n  listContainerStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style to apply to the search input.\n   */\n  searchInputStyle?: StyleProp<TextStyle>;\n  /**\n   * Style to apply to the FlatList component.\n   */\n  listStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style to apply to each of the item container.\n   */\n  pickerItemContainerStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style to apply to each of the item labels.\n   */\n  pickerItemLabelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style to apply to container.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Visibility of flag component\n   */\n  isFlagVisible?: boolean;\n}\n\nexport interface IFlagProps {\n  flag?: any;\n}\n\nexport interface IPickerItemProps {\n  country: ICountry;\n  onCountrySelect: (selectedCountry: ICountry) => void;\n  textStyle?: StyleProp<TextStyle>;\n  containerStyle?: StyleProp<ViewStyle>;\n}\n\nexport interface IPickerTogglerProps {\n  selectedCode?: string;\n  flag?: any;\n  isPickerOpen: boolean;\n  onPickerToggle: (state: boolean) => void;\n  containerStyle?: StyleProp<ViewStyle>;\n  textStyle?: StyleProp<TextStyle>;\n  onLayout: (measure: IItemMeasure) => void;\n  isFlagVisible?: boolean;\n}\n\nexport interface ISearchProps {\n  value?: string;\n  onChangeText: (text: string) => void;\n  onClearInput: () => void;\n  inputStyle?: StyleProp<TextStyle>;\n}\n\nexport interface IStyledTextProps {\n  style?: StyleProp<TextStyle>;\n  children?: JSX.Element | string;\n}\n\nexport interface IItemMeasure {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n"],"mappings":""}